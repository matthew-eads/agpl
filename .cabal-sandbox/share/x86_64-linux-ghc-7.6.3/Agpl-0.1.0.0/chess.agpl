Chess : Game

  Gamestate: {
               Board: {Matrix}
               Piece: {Player (ChessPiece)}
  }
  
  Player: {White | Black}
  Move: {(Player, (Int, Int), (Int, Int))}
  isValid: {\(p, (x1, y1), (x2, y2)) -> if p != Game.Turn then False
                                        else case Game.Board[x1][y1] of
                                               (_, Rook) -> (x1 == x2) xor (y1 == y2)
                                                           } --etc

  outcome: {undefined}
  initialState: {Board: {matrix 8 8 (\(i, j) -> case i of 
                                                  (2) -> (White Pawn)
                                                  (7) -> (Black Pawn)
                                                  (_) -> (Black King))}
                 Turn: {White}}
                                     
  ChessPiece: {Rook|Knight|King|Queen|Bishop|Pawn}
